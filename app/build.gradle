

apply plugin: 'com.android.application'

def getGitCommitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }

    return stdout.toString().trim()
}

android {
    File keystorePropertiesFile = rootProject.file("keystore.properties")

    signingConfigs {
        config {
            if (keystorePropertiesFile.exists()) {
                // load keystore file
                Properties keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.groza.Stereobliss"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 37
        versionName "1.2.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.config
            }

            // try to get the current git hash
            def gitCommitHash

            try {
                gitCommitHash = getGitCommitHash()
            } catch (Exception ignored) {
                gitCommitHash = "unknown"
            }

            buildConfigField("String", "GIT_COMMIT_HASH", "\"${gitCommitHash}\"")
        }
        debug {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.config
            }

            // try to get the current git hash
            def gitCommitHash

            try {
                gitCommitHash = getGitCommitHash()
            } catch (Exception ignored) {
                gitCommitHash = "unknown"
            }

            buildConfigField("String", "GIT_COMMIT_HASH", "\"${gitCommitHash}\"")
        }
    }
    lint {
        abortOnError false
    }
    namespace 'com.groza.Stereobliss'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation 'androidx.appcompat:appcompat-resources:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.2.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-common:2.5.0'

    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    implementation 'androidx.media:media:1.6.0'

    implementation 'com.google.android.material:material:1.6.1'

    implementation 'com.android.volley:volley:1.2.1'

    implementation 'info.debatty:java-string-similarity:2.0.0'
    implementation 'androidx.core:core:1.9.0'
}
